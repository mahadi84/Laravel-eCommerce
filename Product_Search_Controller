
01. How to get and show Products by 
               a) MENU(Cat/Sub_Cat/Child_Cat)
               b) SEARCH-BOX
               c) BRAND-WISE
               d) CATEGORY-WISE
               e) PRICE-RANGE-WISE

02. How to get a Product by SLUG?



BLADE:
A)MENU(Cat/Sub_Cat/Child_Cat)-SEARCH:  <li> href="{{route('products.index',['category'=>$cat->slug])}}"><i class="{{$cat->icon}}"></i> {{$cat->name}} </a>

B)SEARCH-BOX-SEARCH:----
   <form action="{{url()->current()}}">
     <input type="text" name="search" value="{{request()->search}}" placeholder="Search...">
     <button type="submit"><i class="far fa-search"></i></button>
  </form>

C)BRAND-WISE-SEARCH:--------
    <ul>
    @forelse ($brands as $brand )
    <li><a href="{{route('products.index',['brand'=>$brand->slug])}}">{{$brand->name}}</a></li>
    @empty
         No Brands Available
    @endforelse
    </ul>

D)CATEGORY-WISE-SEARCH:------
     @forelse ($categories as $category )
    <li><a href="{{route('products.index',['category'=>$category->slug])}}">{{$category->name}}</a></li>
    @empty
    No Category Available
    @endforelse


E)PRICE-RANGE-WISE-SEARCH:-------
     <form action="{{url()->current()}}">
    @foreach (request()->query() as $key => $value)
    @if($key != 'range')
        <input type="hidden" name="{{$key}}" value="{{$value}}" />
    @endif
    @endforeach
    <input type="text" class="form-control" name="range" placeholder="from-to" value="{{request()->range}}"/>
    <button type="submit" class="common_btn mt-2">filter</button>
    </form>

-----------------------------------
ROUTE: Route::get('products', [FrontendProducController::class, 'index'])->name('products.index');

CONTROLLER:----------
<?php
namespace App\Http\Controllers\Frontend;
use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Models\Product;
use App\Models\ProductReview;
use App\Models\Brand;
use App\Models\Category;
use App\Models\SubCategory;
use App\Models\ChildCategory;

use Illuminate\Support\Facades\Session;

class FrontendProducController extends Controller
{
    
    public function index(Request $request){
        $data['title']='Products';
        if($request->has('category')){
        $category = Category::where('slug', $request->category)->firstOrFail();
        $data['products'] = Product::
                            with(['productVariantTable', 'categoryTable', 'productImageGalleryTable'])
                            ->where([
                                'category_id'=> $category->id, 
                                'status'=>1, 
                                'is_approved' => 1
                                ])
                            ->when($request->has('range'), function($query) use($request){
                                $price = explode('-',$request->range);
                                $from  = empty($price[0]) ?  '0' : $price[0];
                                $to    = empty($price[1]) ?  '0': $price[1] ;
                                $query->where('price', '>=', $from)->where('price', '<=', $to);
                            })
                            ->paginate(12);
        }elseif($request->has('sub_category')){
            $sub_category = SubCategory::where('slug', $request->sub_category)->firstOrFail();
            $data['products'] = Product::
                                with(['productVariantTable', 'categoryTable', 'productImageGalleryTable'])
                                ->where([
                                    'sub_category_id'=> $sub_category->id, 
                                    'status'=>1, 
                                    'is_approved' => 1
                                ])
                                ->when($request->has('range'), function($query) use($request){
                                    $price = explode('-',$request->range);
                                    $from  = empty($price[0]) ?  '0' : $price[0];
                                    $to    = empty($price[1]) ?  '0': $price[1] ;
                                    $query->where('price', '>=', $from)->where('price', '<=', $to);
    
                                })
                                ->paginate(12);
        }elseif($request->has('child_category')){
            $child_category = ChildCategory::where('slug', $request->child_category)->firstOrFail();
            $data['products'] = Product::
                                with(['productVariantTable', 'categoryTable', 'productImageGalleryTable'])
                                ->where([
                                    'child_category_id'=> $child_category->id, 
                                    'status'=>1, 
                                    'is_approved' => 1
                                    ])
                                    ->when($request->has('range'), function($query) use($request){
                                        $price = explode('-',$request->range);
                                        $from  = empty($price[0]) ?  '0' : $price[0];
                                        $to    = empty($price[1]) ?  '0': $price[1] ;
                                        $query->where('price', '>=', $from)->where('price', '<=', $to);
        
                                    })
                                ->paginate(12);
        }elseif($request->has('search')){
            $data['products'] = Product::
                                with(['productVariantTable', 'categoryTable', 'productImageGalleryTable'])                            
                                ->where('name', 'like', '%'.$request->search.'%')
                                ->where(['status'=>1, 'is_approved' => 1])
                                ->when($request->has('range'), function($query) use($request){
                                    $price = explode('-',$request->range);
                                    $from  = empty($price[0]) ?  '0' : $price[0];
                                    $to    = empty($price[1]) ?  '0': $price[1] ;
                                    $query->where('price', '>=', $from)->where('price', '<=', $to);
    
                                })
                                ->paginate(12);
        }elseif($request->has('brand')){
            $brand = Brand::where('slug',$request->brand)->firstOrFail();
            $data['products'] = Product::
                                    with(['productVariantTable', 'categoryTable', 'productImageGalleryTable'])
                                    ->where([
                                    'brand_id'=> $brand->id, 
                                    'status'=>1, 
                                    'is_approved' => 1
                                    ])
                                    ->when($request->has('range'), function($query) use($request){
                                        $price = explode('-',$request->range);
                                        $from  = empty($price[0]) ?  '0' : $price[0];
                                        $to    = empty($price[1]) ?  '0': $price[1] ;
                                        $query->where('price', '>=', $from)->where('price', '<=', $to);
        
                                    })
                                ->paginate(12);
        }else{
            $data['products'] = Product::
                                        with(['productVariantTable', 'categoryTable', 'productImageGalleryTable'])                            
                                        ->where(['status'=>1, 'is_approved' => 1])                                        
                                        ->when($request->has('range'), function($query) use($request){
                                            $price = explode('-',$request->range);
                                            $from  = empty($price[0]) ?  '0' : $price[0];
                                            $to    = empty($price[1]) ?  '0': $price[1] ;
                                            $query->where('price', '>=', $from)->where('price', '<=', $to);

                                        })
                                        ->paginate(12);
        }

        $data['categories'] = Category::where('status', 1)->paginate(12);
        $data['brands'] = Brand::where('status', 1)->paginate(12);
        
        return view('frontend.pages.products',$data);
    }
    
    
    public function showProduct(string $slug){
        $data['title']='Product Details';
        $data['product']= Product::with(['productTypeTable','brandTable','vendorTable','productImageGalleryTable','categoryTable','productVariantTable'])
                                ->where('slug', $slug)
                                ->where('status', 1)
                                ->first();
        $data['productReviews']= ProductReview::with('userTable', 'productReviewGalleryTable')
                                                ->where(['product_id'=> $data['product']->id, 'status' =>1])->paginate(1);
        
        return view('frontend.pages.product-details',$data);
    }

    public function chageListView(Request $request){
        Session::put('product_list_style', $request->style);
    }


}

