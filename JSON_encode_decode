JSON= Javascript Object Notation.

Q: JSON vs ARRAY JSON.

==================SHOW (NON-ARRAY) JSON DATA TO FRONTEND:=========================================
CONTROLLER: 
 $homepage_secion_banner_two = Advertisement::where('key', 'homepage_secion_banner_two')->first();
 $homepage_secion_banner_two = json_decode($homepage_secion_banner_two?->value);

BLADE:
{{@$homepage_secion_banner_two->banner_one->status == 1 ? 'checked':''}}
{{@$homepage_secion_banner_two->banner_one->image}}
{{$homepage_secion_banner_two->banner_two->banner_image}}


==================== DATA RECEIVE, ENCODE to JSON and INSERT TO A TABLE :=========================
TABLE DATA LOOKS LIKE THIS:-------
{
"banner_one":{"banner_url":"url 01","status":1,"banner_image":"5fhg4h84MIVftI4WbR6QXrsb7Zhndv.jpg"},
"banner_two":{"banner_url":"url 02","status":1,"banner_image":"ezeLSAVyAHvLD0CHtE7bnAJJgoecSx.jpg"}
}

CONTROLLER:---------
 public function homepageBannerSecionTwo(Request $request){
        $request->validate([
            'banner_one_image' => ['image'],
            'banner_one_url' => ['required'],
            'banner_two_image' => ['image'],
            'banner_two_url' => ['required']
        ]);

                                                //'image_name','size(500,600)','uploads_folder_name', oldImage(Get_it_from_query) 
       $imagePath = $this->updateImage($request, 'banner_one_image', '640,275', 'advertisement', $request->banner_one_image);
       $imagePathTwo = $this->updateImage($request, 'banner_two_image', '640,275', 'advertisement', $request->banner_two_image);

        $value = [
                     'banner_one' => [
                         'banner_url' => $request->banner_one_url,
                         'status' => $request->banner_one_status == 'on' ? 1 : 0
                     ],
                     'banner_two' => [
                         'banner_url' => $request->banner_two_url,
                         'status' => $request->banner_two_status == 'on' ? 1 : 0
                     ]
                ];
        if(!empty($imagePath)){
            $value['banner_one']['banner_image'] = $imagePath;
        }else {
            $value['banner_one']['banner_image'] = $request->banner_one_old_image;
        }
        if(!empty($imagePathTwo)){
            $value['banner_two']['banner_image'] = $imagePathTwo;
        }else {
            $value['banner_two']['banner_image'] = $request->banner_two_old_image;
        }

        $value = json_encode($value);
        Advertisement::updateOrCreate(
            ['key' => 'homepage_secion_banner_two'],
            ['value' => $value]
        );
        return redirect()->back()->with('success', 'Updated Successfully!');
    }




======================================= SHOW ARRAY JSON DATA  =====================================
----------JSON_ARRAY in TABLE:-----
[
{"category":"15","sub_category":null,"child_category":null},
{"category":"1","sub_category":"1","child_category":null}
]

-----------------ROUTE:---------------------------------------
 $data['popularCategorySection']= HomePageSetting::where('key', 'popular_category_section')->first();

---------------- BLADE ---------------------------
 @php
\\'true' for array print
   $popularCategories = json_decode($popularCategorySection->value, true);
 @endphp

        @php
        $products = [];
        @endphp
         \\two times foreach why?   
        @foreach($popularCategories as $popularCategory)
                @php
                 $lastKey= [];
                    foreach ($popularCategory as $key => $item){
                        if( $item === null) {
                            break;
                        }
                        // grab the last non-zero-value befor zero
                        $lastKey = [$key => $item];                 
                    }

                  if(array_keys($lastKey)[0] == 'category'){
                    $category= \App\Models\Category::find($lastKey['category']);
                    $products[]= \App\Models\Product::where(['category_id'=>$category->id, 'status'=>1])->take(12)->get();
                                       
                  }elseif(array_keys($lastKey)[0] == 'sub_category'){
                    $category= App\Models\SubCategory::find($lastKey['sub_category']);
                    $products[]= \App\Models\Product::where(['sub_category_id'=>$category->id, 'status'=>1])->take(12)->get();
                  }elseif(array_keys($lastKey)[0] == 'child_category'){
                    $category= App\Models\ChildCategory::find($lastKey['child_category']);
                    $products[]= \App\Models\Product::where(['child_category_id'=>$category->id, 'status'=>1])->take(12)->get();
                  };

                @endphp 
            <button class="{{ $loop->index === 0 ? 'auto_click active' : '' }}" data-filter=".category-{{$loop->index}}">{{ $category->name}}</button>
        @endforeach

//Show Product
 @forelse($products as $key => $product)
     @forelse($product as $item)
        $item->product;
        $item->thumb_image;
     @endforelse
@endforelse

---------JSON_ARRAY INSERT CONTROLLER:----------
 public function createOrUpdatePopular(Request $request){
        $request->validate([
            'category_01' => ['required', 'integer'],
            'category_02' => ['required', 'integer'],
        ]);

        $data= [
                    [
                        'category'       => $request->category_01,
                        'sub_category'   => $request->sub_category_01,
                        'child_category' => $request->child_category_01,
                    ],
                    [
                        'category'       => $request->category_02,
                        'sub_category'   => $request->sub_category_02,
                        'child_category' => $request->child_category_02,
                    ]
               ];

       $ok = HomePageSetting::UpdateOrCreate(
                            ['key' => 'popular_category_section'],
                            ['value' => json_encode($data)]
                            );
        if ($ok) {
           return redirect()->back()->with('success', 'Data update successfull');
        }else{
            return redirect()->back()->with('error', 'Failed !!');
        }

    }
